<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding Life</title>
    <description>这是一个Java程序员的博客 | Java Blog</description>
    <link>https://luxinghong.github.io/blog/</link>
    <atom:link href="https://luxinghong.github.io/blog/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 26 Apr 2021 07:09:33 +0800</pubDate>
    <lastBuildDate>Mon, 26 Apr 2021 07:09:33 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>正确理解浮点数</title>
        <description>&lt;h3 id=&quot;首先浮点数是一种数字的表示方式而不是指小数&quot;&gt;首先，浮点数是一种数字的表示方式，而不是指小数&lt;/h3&gt;

&lt;p&gt;很多人一提到浮点数，就说是小数，这是不对的。浮点数只是一种数字的表示方式，数字是多少就是多少，它就在那里不会改变，改变的只是人类表示它们的方式。&lt;/p&gt;

&lt;p&gt;比如给定一个数 10，能确定它是浮点数还是定点数吗？&lt;/p&gt;

&lt;p&gt;不能！我们必须知道这个数是如何存储的，即底层是如何来表示这个数的，才能说它是定点数还是浮点数。&lt;/p&gt;

&lt;p&gt;这其实类似于十进制中的科学计数法，比如 1234.5678这个数，这个数本身不会改变，是多少永远是多少，变的是表示它的方式，我们可以以多种不同的方式来表示这个数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$1.2345678 \times 10^3$&lt;/li&gt;
  &lt;li&gt;$123.45678 \times 10$&lt;/li&gt;
  &lt;li&gt;$0.12345678 \times 10^4$&lt;/li&gt;
  &lt;li&gt;$12345678 \times 10^{-4}$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看到，小数点的位置是浮动的，这才是浮点数名字的由来。&lt;strong&gt;再次强调，浮点数指的是表示数字的方式，而不是数字本身&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;至于大家常提到的IEEE754，它是一个标准，即规定了大家统一采用哪种方式来表示和存储数据，它规定尾数部分格式为 1.xxxx，具体存储时1省略，其他细节不再赘述。&lt;/p&gt;

&lt;h3 id=&quot;为什么要使用浮点数&quot;&gt;为什么要使用浮点数&lt;/h3&gt;

&lt;p&gt;简单来说，同样的位数，浮点数表示的范围更大&lt;/p&gt;

&lt;p&gt;比如 int 和 float 同是 32bit&lt;/p&gt;

&lt;p&gt;int的最大值为 $2^{31}-1 = 2.147483647E9 = 2147483647$&lt;/p&gt;

&lt;p&gt;float的最大值为 $(2-2^{23})\cdot2^{127} = 0\mbox{x}1.fffffeP+127f = 3.4028235E38f$ 		这表示范围可比 int 大多了&lt;/p&gt;

&lt;h3 id=&quot;为什么float的精度是67位&quot;&gt;为什么float的精度是6~7位？&lt;/h3&gt;

&lt;p&gt;因为float的尾数部分有23位，即可以用23位二进制来表示一个数，指数部分不影响精度，只影响范围，因为有效数字是从第一个非0位算起。&lt;/p&gt;

&lt;p&gt;事实上还要加上规格化尾数省略的1，所以问题就变成24位二进制位可以表示多少位十进制？&lt;/p&gt;

\[\begin{align*}
2^{24}  &amp;amp;= 10^x\\

x  &amp;amp;= {log_102^{24}} = 24 \cdot log_102 = 7.22471989594
\end{align*}\]

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.123456789f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0.12345679  只能保证7位精度&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 25 Apr 2021 00:00:00 +0800</pubDate>
        <link>https://luxinghong.github.io/blog/2021/04/25/float/</link>
        <guid isPermaLink="true">https://luxinghong.github.io/blog/2021/04/25/float/</guid>
        
        <category>浮点数</category>
        
        <category>数据类型</category>
        
        
      </item>
    
      <item>
        <title>Git基本原理</title>
        <description>&lt;p&gt;&lt;strong&gt;把 Git 看作是一个文件系统，这很重要，事实上它就是一个小型的文件系统。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;先创建一个空目录my_repo，进入该目录，接下来的所有操作都在这个目录内，建议按顺序阅读。&lt;/p&gt;

&lt;h3 id=&quot;git-init-做了什么&quot;&gt;git init 做了什么&lt;/h3&gt;

&lt;p&gt;git init 会在当前目录内创建一个 .git 目录，包含如下内容&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .git
❯ tree &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
├── branches
├── config
├── description
├── HEAD
├── hooks
│   ├── applypatch-msg.sample
│   ├── commit-msg.sample
│   ├── fsmonitor-watchman.sample
│   ├── post-update.sample
│   ├── pre-applypatch.sample
│   ├── pre-commit.sample
│   ├── pre-merge-commit.sample
│   ├── prepare-commit-msg.sample
│   ├── pre-push.sample
│   ├── pre-rebase.sample
│   ├── pre-receive.sample
│   ├── push-to-checkout.sample
│   └── update.sample
├── info
│   └── exclude
├── objects
│   ├── info
│   └── pack
└── refs
    ├── heads
    └── tags
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;看看 git status 的输出&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
❯ git status
位于分支 master

尚无提交

无文件要提交（创建/拷贝文件并使用 &lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt; 建立跟踪）
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;告诉我们当前位于分支 master，git 是如何知道的，其实是存储在 HEAD 文件中&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; .git/HEAD
ref: refs/heads/master
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再看 git branch，结果是空，因为 .git/refs/heads 下还没有任何东西，这里就是存储分支的地方&lt;/p&gt;

&lt;h3 id=&quot;git-add-做了什么&quot;&gt;git add 做了什么&lt;/h3&gt;

&lt;p&gt;创建一个文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;123 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; a.txt
❯ ll
总用量 4
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 &lt;span class=&quot;nb&quot;&gt;head head &lt;/span&gt;4  4月 13 23:51 a.txt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时 .git 中的内容没有发生任何变化&lt;/p&gt;

&lt;p&gt;执行 git add a.txt 后再查看 .git 中的内容&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git add a.txt
❯ tree .git
.git
├── branches
├── config
├── description
├── HEAD
├── hooks
│   ├── applypatch-msg.sample
│   ├── commit-msg.sample
│   ├── fsmonitor-watchman.sample
│   ├── post-update.sample
│   ├── pre-applypatch.sample
│   ├── pre-commit.sample
│   ├── pre-merge-commit.sample
│   ├── prepare-commit-msg.sample
│   ├── pre-push.sample
│   ├── pre-rebase.sample
│   ├── pre-receive.sample
│   ├── push-to-checkout.sample
│   └── update.sample
├── index
├── info
│   └── exclude
├── objects
│   ├── 19
│   │   └── 0a18037c64c43e6b11489df4bf0b9eb6d2c9bf
│   ├── info
│   └── pack
└── refs
    ├── heads
    └── tags

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;objects 中有新增的东西，用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git cat-file&lt;/code&gt; 看一下&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 190a18037c64c43e6b11489df4bf0b9eb6d2c9bf
blob
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 190a18037c64c43e6b11489df4bf0b9eb6d2c9bf
123
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到该文件类型是 blob，文件内容是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;123&lt;/code&gt;，就是 a.txt 的内容。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blob&lt;/code&gt;是 git &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;文件系统&lt;/code&gt; 中的一种文件类型，即二进制大对象，用于存储文件的内容 (&lt;strong&gt;注意，只保存文件的内容，不保存metadata如文件名、创建时间等信息&lt;/strong&gt;)，文件内容使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zlib的deflat&lt;/code&gt; 压缩算法，文件名采用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sha-1&lt;/code&gt; 哈希算法(20个字节，160个bit，40个十六进制)，取第1个字节作目录名，剩下19个字节作文件名。所以 objects 下最多会有 256 个目录，这样做是为了提高查找速度。&lt;/p&gt;

&lt;p&gt;除此之外，还多了一个 index 文件，也就是常说的 stage area (暂存区)，它们是一个意思。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The index is a binary file (generally kept in . git/index ) containing a sorted list of path names, each with permissions and the SHA1 of a blob object; git ls-files can show you the contents of the index. Please note that words index, stage, and cache are the same thing in Git: they are used interchangeably.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可以用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git ls-files&lt;/code&gt;  查看&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git ls-files
a.txt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在这里存储了相关的metadata，可以家 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--debug&lt;/code&gt; 查看&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git ls-files &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt;
a.txt
  ctime: 1618345384:304625740
  mtime: 1618345384:304625740
  dev: 65024 ino: 20849651
  uid: 1000  gid: 1000
  size: 8 flags: 0
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git status
位于分支 master

尚无提交

要提交的变更：
  （使用 &lt;span class=&quot;s2&quot;&gt;&quot;git rm --cached &amp;lt;文件&amp;gt;...&quot;&lt;/span&gt; 以取消暂存）
        新文件：   a.txt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;试试取消暂存&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--cached&lt;/span&gt; a.txt
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;a.txt&apos;&lt;/span&gt;
❯ 
❯ 
❯ git status
位于分支 master

尚无提交

未跟踪的文件:
  （使用 &lt;span class=&quot;s2&quot;&gt;&quot;git add &amp;lt;文件&amp;gt;...&quot;&lt;/span&gt; 以包含要提交的内容）
        a.txt

提交为空，但是存在尚未跟踪的文件（使用 &lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt; 建立跟踪）
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再次查看 index 文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git ls-files

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;没有内容&lt;/p&gt;

&lt;p&gt;所以常说的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add&lt;/code&gt; 把文件添加到暂存区就是这个意思&lt;/p&gt;

&lt;p&gt;其他部分没有变化&lt;/p&gt;

&lt;h3 id=&quot;git-commit-做了什么&quot;&gt;git commit 做了什么&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;add a.txt&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master（根提交） bb97804] add a.txt
 1 file changed, 1 insertion&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 create mode 100644 a.txt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看 .git&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ tree .git
.git
├── branches
├── COMMIT_EDITMSG
├── config
├── description
├── HEAD
├── hooks
│   ├── applypatch-msg.sample
│   ├── commit-msg.sample
│   ├── fsmonitor-watchman.sample
│   ├── post-update.sample
│   ├── pre-applypatch.sample
│   ├── pre-commit.sample
│   ├── pre-merge-commit.sample
│   ├── prepare-commit-msg.sample
│   ├── pre-push.sample
│   ├── pre-rebase.sample
│   ├── pre-receive.sample
│   ├── push-to-checkout.sample
│   └── update.sample
├── index
├── info
│   └── exclude
├── logs
│   ├── HEAD
│   └── refs
│       └── heads
│           └── master
├── objects
│   ├── 19
│   │   └── 0a18037c64c43e6b11489df4bf0b9eb6d2c9bf
│   ├── bb
│   │   └── 978046c355c1fa2875c6a8473cea4a60d55814
│   ├── c4
│   │   └── 903888e91347c58a530c1f1987dfc4d203960a
│   ├── info
│   └── pack
└── refs
    ├── heads
    │   └── master
    └── tags
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;objects 中多了2个文件，分别看下是什么&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; bb978046c355c1fa2875c6a8473cea4a60d55814
commit
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; bb978046c355c1fa2875c6a8473cea4a60d55814
tree c4903888e91347c58a530c1f1987dfc4d203960a
author lxh &amp;lt;452228391@qq.com&amp;gt; 1618338183 +0800
committer lxh &amp;lt;452228391@qq.com&amp;gt; 1618338183 +0800

add a.txt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到该文件类型是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit&lt;/code&gt; 是 git 中另一种文件类型，包含了 author、commit message 等信息。还包含了另一种叫作 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree&lt;/code&gt; 的文件类型，也就是多出来的另一个文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; c4903888e91347c58a530c1f1987dfc4d203960a
tree
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; c4903888e91347c58a530c1f1987dfc4d203960a
100644 blob 190a18037c64c43e6b11489df4bf0b9eb6d2c9bf    a.txt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree&lt;/code&gt; 即目录树的意思，它可以包含 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blob&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree&lt;/code&gt; ，即可以包含文件和子目录，就和文件系统是一样的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;所以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit&lt;/code&gt; 可以理解为当前时刻的文件系统快照 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snapshot&lt;/code&gt;，这一点很重要，所以 git 可以回到任一时刻的状态。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;除此之外，refs/heads 下也多出来一个文件 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;，看下是什么&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; .git/refs/heads/master
bb978046c355c1fa2875c6a8473cea4a60d55814
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; 只是一个存储了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit&lt;/code&gt; 文件名的文件，表示指向当前最新的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit&lt;/code&gt;。所以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; 只是一个别名而已，同理任何分支都是这样，比如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt; 分支。它的作用是 HEAD 会指向它，用来表示当前是在哪个分支上。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; .git/HEAD
ref: refs/heads/master
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;改动文件会发生什么&quot;&gt;改动文件会发生什么&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;往 a.txt 中新增内容&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;456 &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; a.txt
❯ less a.txt
❯ git status
位于分支 master
尚未暂存以备提交的变更：
  （使用 &lt;span class=&quot;s2&quot;&gt;&quot;git add &amp;lt;文件&amp;gt;...&quot;&lt;/span&gt; 更新要提交的内容）
  （使用 &lt;span class=&quot;s2&quot;&gt;&quot;git restore &amp;lt;文件&amp;gt;...&quot;&lt;/span&gt; 丢弃工作区的改动）
        修改：     a.txt

修改尚未加入提交（使用 &lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt; 和/或 &lt;span class=&quot;s2&quot;&gt;&quot;git commit -a&quot;&lt;/span&gt;）
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行 add&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git add a.txt
❯ tree .git
.git
├── branches
├── COMMIT_EDITMSG
├── config
├── description
├── HEAD
├── hooks
│   ├── applypatch-msg.sample
│   ├── commit-msg.sample
│   ├── fsmonitor-watchman.sample
│   ├── post-update.sample
│   ├── pre-applypatch.sample
│   ├── pre-commit.sample
│   ├── pre-merge-commit.sample
│   ├── prepare-commit-msg.sample
│   ├── pre-push.sample
│   ├── pre-rebase.sample
│   ├── pre-receive.sample
│   ├── push-to-checkout.sample
│   └── update.sample
├── index
├── info
│   └── exclude
├── logs
│   ├── HEAD
│   └── refs
│       └── heads
│           └── master
├── objects
│   ├── 19
│   │   └── 0a18037c64c43e6b11489df4bf0b9eb6d2c9bf
│   ├── bb
│   │   └── 978046c355c1fa2875c6a8473cea4a60d55814
│   ├── c4
│   │   └── 903888e91347c58a530c1f1987dfc4d203960a
│   ├── ce
│   │   └── 8c77db7f732ddc56661bc5f5cae2e1198978b1
│   ├── info
│   └── pack
└── refs
    ├── heads
    │   └── master
    └── tags

16 directories, 26 files
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;objects 中多出了一个文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; ce8c77db7f732ddc56661bc5f5cae2e1198978b1
blob
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ce8c77db7f732ddc56661bc5f5cae2e1198978b1
123
456
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;就是 a.txt 最新的内容，而原来的 a.txt 依然还在(190a18037c64c43e6b11489df4bf0b9eb6d2c9bf)，所以 git 保存的是整个文件，而不是只是变化的部分，这也是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit&lt;/code&gt; 的基础，所以 git 能回到任一时刻的状态。&lt;/p&gt;

&lt;p&gt;执行提交&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;modify a.txt&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master 294a462] modify a.txt
 1 file changed, 1 insertion&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
❯ tree .git
.git
├── branches
├── COMMIT_EDITMSG
├── config
├── description
├── HEAD
├── hooks
│   ├── applypatch-msg.sample
│   ├── commit-msg.sample
│   ├── fsmonitor-watchman.sample
│   ├── post-update.sample
│   ├── pre-applypatch.sample
│   ├── pre-commit.sample
│   ├── pre-merge-commit.sample
│   ├── prepare-commit-msg.sample
│   ├── pre-push.sample
│   ├── pre-rebase.sample
│   ├── pre-receive.sample
│   ├── push-to-checkout.sample
│   └── update.sample
├── index
├── info
│   └── exclude
├── logs
│   ├── HEAD
│   └── refs
│       └── heads
│           └── master
├── objects
│   ├── 19
│   │   └── 0a18037c64c43e6b11489df4bf0b9eb6d2c9bf
│   ├── 29
│   │   └── 4a462e98ac84b47522beb5a6c5b795bad599c2
│   ├── bb
│   │   └── 978046c355c1fa2875c6a8473cea4a60d55814
│   ├── c4
│   │   └── 903888e91347c58a530c1f1987dfc4d203960a
│   ├── ce
│   │   └── 8c77db7f732ddc56661bc5f5cae2e1198978b1
│   ├── e9
│   │   └── bbf146022722173fb1c459daf3a03f211ad3ad
│   ├── info
│   └── pack
└── refs
    ├── heads
    │   └── master
    └── tags
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;objects 下又多了两个文件，分别看一下&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 294a462e98ac84b47522beb5a6c5b795bad599c2
tree e9bbf146022722173fb1c459daf3a03f211ad3ad
parent bb978046c355c1fa2875c6a8473cea4a60d55814
author lxh &amp;lt;452228391@qq.com&amp;gt; 1618340817 +0800
committer lxh &amp;lt;452228391@qq.com&amp;gt; 1618340817 +0800

modify a.txt
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 294a462e98ac84b47522beb5a6c5b795bad599c2
commit
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这是我们刚刚的提交，里面又多了一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; e9bbf146022722173fb1c459daf3a03f211ad3ad
tree
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; e9bbf146022722173fb1c459daf3a03f211ad3ad
100644 blob ce8c77db7f732ddc56661bc5f5cae2e1198978b1    a.txt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;感觉似曾眼熟，这不跟 c4903888e91347c58a530c1f1987dfc4d203960a 重复了吗？&lt;/p&gt;

&lt;p&gt;事实上，基于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hash&lt;/code&gt; 的算法，只要内容有任何改动，哈希结果都会发生变化。原&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree&lt;/code&gt;  中包含了 a.txt，a.txt 发生了变化会导致原 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree&lt;/code&gt; 的哈希结果也发生变化，所以产生了一个新的 tree。可能你觉得这里有点多余，我们换个场景就明白了。&lt;/p&gt;

&lt;p&gt;( 另外可以自行查看一下，refs/heads/master 中的内容，现在应该是指向了这个新的 commit)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;删除 a.txt&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;a.txt
git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时 objects 没有发生任何变化，只有 index 发生了变化&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git ls-files

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;index 里没有文件了，即暂存区里没有文件了，因为我们把它删除了，显而易见，工作区里也不会有这个文件了&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/home/head/code/my_repo
❯ ll
总用量 0
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;提交&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;delete a.txt&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master 138a68a] delete a.txt
 1 file changed, 2 deletions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 delete mode 100644 a.txt
❯ ll
总用量 0
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;objects 下又多了两个文件，这里就不展示目录树了&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 138a68ac42b5fde646849df01c1339cfaec874c3
commit
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 138a68ac42b5fde646849df01c1339cfaec874c3
tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904
parent 294a462e98ac84b47522beb5a6c5b795bad599c2
author lxh &amp;lt;452228391@qq.com&amp;gt; 1618342629 +0800
committer lxh &amp;lt;452228391@qq.com&amp;gt; 1618342629 +0800

delete a.txt
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 4b825dc642cb6eb9a060e54bf8d69288fbee4904
tree
❯ git cat-file &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 4b825dc642cb6eb9a060e54bf8d69288fbee4904
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一个是最新的提交，一个是最新的tree，这个tree里没有任何东西&lt;/p&gt;

&lt;p&gt;现在我们来找回这个文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; git log

commit 138a68ac42b5fde646849df01c1339cfaec874c3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HEAD -&amp;gt; master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Author: lxh &amp;lt;452228391@qq.com&amp;gt;
Date:   Wed Apr 14 03:37:09 2021 +0800

    delete a.txt

commit 294a462e98ac84b47522beb5a6c5b795bad599c2
Author: lxh &amp;lt;452228391@qq.com&amp;gt;
Date:   Wed Apr 14 03:06:57 2021 +0800

    modify a.txt

commit bb978046c355c1fa2875c6a8473cea4a60d55814
Author: lxh &amp;lt;452228391@qq.com&amp;gt;
Date:   Wed Apr 14 02:23:03 2021 +0800

    add a.txt
    
❯ git reset 294a462e98ac84b47522beb5a6c5b795bad599c2
重置后取消暂存的变更：
D       a.txt

❯ git status
位于分支 master
尚未暂存以备提交的变更：
  （使用 &lt;span class=&quot;s2&quot;&gt;&quot;git add/rm &amp;lt;文件&amp;gt;...&quot;&lt;/span&gt; 更新要提交的内容）
  （使用 &lt;span class=&quot;s2&quot;&gt;&quot;git restore &amp;lt;文件&amp;gt;...&quot;&lt;/span&gt; 丢弃工作区的改动）
        删除：     a.txt

修改尚未加入提交（使用 &lt;span class=&quot;s2&quot;&gt;&quot;git add&quot;&lt;/span&gt; 和/或 &lt;span class=&quot;s2&quot;&gt;&quot;git commit -a&quot;&lt;/span&gt;）

❯ git restore &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
❯ ll
总用量 4
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 &lt;span class=&quot;nb&quot;&gt;head head &lt;/span&gt;8  4月 14 03:43 a.txt
❯ &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;a.txt
123
456
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以，由于保存了任一时刻的快照，便能很容易的恢复到任一时刻的文件系统状态。&lt;/p&gt;

&lt;p&gt;所以，得把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree&lt;/code&gt;理解为系统快照，是带状态的一种对象，不能以普通文件系统的视角，虽然是同一个目录，但是有文件和没文件是两种状态；即便是同一个文件，文件改变了，那整个目录也是一种新的状态。这就是时光穿梭机！&lt;/p&gt;

&lt;h3 id=&quot;git-checkout-做了什么&quot;&gt;git checkout 做了什么&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout -b dev&lt;/code&gt; 会在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refs/heads&lt;/code&gt; 下新增一个 dev 文件，文件内容为当前最新 commit ，此时应该和 master 内容是一样的，两个分支此时的状态完全一致，objects 下没有任何变化。&lt;/p&gt;

&lt;p&gt;除此之外，HEAD 的内容会更改为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ref refs/heads/dev&lt;/code&gt; ，表示当前分支为 dev 分支。&lt;/p&gt;

&lt;p&gt;这就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;checkout&lt;/code&gt; 所做的全部内容了。&lt;/p&gt;

&lt;p&gt;所以分支只是一个别名而已，指向不同的 commit，以表示不同时刻的文件系统状态。&lt;/p&gt;

&lt;h3 id=&quot;从-git-可以学到什么&quot;&gt;从 git 可以学到什么&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;链表(指针)&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;branch -&amp;gt; commit -&amp;gt; tree -&amp;gt; blob (subtree)&lt;/p&gt;

      &lt;p&gt;branch 只是一个 commit 的别名，或者叫指针也行&lt;/p&gt;

      &lt;p&gt;commit 如果不是第一个提交的话，还有一个 parent 属性，表示之前一个提交&lt;/p&gt;

      &lt;p&gt;git 的整个操作过程简化来说就是操作 HEAD 指针在各个 commit 之间跳转，然后根据 commit 中的 tree “渲染” 出整个文件系统&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;哈希&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;基于哈希的消息摘要能快速的标识出整个文件系统，而且 SHA-1 的碰撞概率在版本控制这个用途上来说基本可以认为不会发生&lt;/p&gt;

      &lt;p&gt;See Also &lt;a href=&quot;https://www.zhihu.com/question/23789956&quot;&gt;Git是否考虑到SHA1碰撞的问题了？&lt;/a&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;存储整体而不是存储变化，好像 React 基本思想也是这样(当状态变化时重新渲染组件，React也可以进行时光穿梭)&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;这里的整体指的是文件和相关联的tree这个整体，而不是整个文件系统。其他未发生变化的blob和tree直接引用就行。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;常用命令&quot;&gt;常用命令&lt;/h3&gt;

&lt;p&gt;本地创建分支并推送到远程分支&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git push origin branch:branch &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; 本地分支与远程分支要同名
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;删除远程分支&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git push origin &lt;span class=&quot;nt&quot;&gt;--delete&lt;/span&gt; branch
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;see-also&quot;&gt;See Also&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=fWMKue-WBok&amp;amp;list=PL9lx0DXCC4BNUby5H58y6s2TQVLadV8v7&quot;&gt;Git internals&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Apr 2021 00:00:00 +0800</pubDate>
        <link>https://luxinghong.github.io/blog/2021/04/13/git/</link>
        <guid isPermaLink="true">https://luxinghong.github.io/blog/2021/04/13/git/</guid>
        
        <category>Git</category>
        
        
      </item>
    
      <item>
        <title>Manjaro安装配置踩坑</title>
        <description>&lt;h3 id=&quot;lvm方式的安装&quot;&gt;LVM方式的安装&lt;/h3&gt;

&lt;p&gt;我安装的版本是Manjaro 21 KDE，常规安装按图形界面方式很快，没有任何问题。但 &lt;a href=&quot;https://github.com/calamares/calamares&quot;&gt;calamares&lt;/a&gt;当前版本对 lvm 的支持还不是很好，直接在图形界面采用 lvm 点下一步后会马上闪退，或者进入安装过程后报各种卷创建的错误，实在无招，只能曲线救国。&lt;/p&gt;

&lt;p&gt;最开始手动创建卷，然后进图形界面选择文件系统和挂载点，安装倒是没问题了，最后也提示安装成功。但重启后找不到系统，还是会继续进入U盘。推测是 calamares 在 lvm 方式下创建 efi 分区有bug，gitHub上也有很多相关issue。&lt;/p&gt;

&lt;p&gt;试了N遍之后，最后的办法是先按常规方式安装一遍，保证重启后能正常进入系统。再用U盘进入live environment，在已分区的基础上手动创建物理卷，卷组和逻辑卷。efi 和 swap 不要动(注意在后续图形安装界面中 efi 千万别选择格式化，要的就是保留 efi 之前的内容)，其他分区可自由分配卷组和逻辑卷。最后进入图形安装界面选择挂载点和文件系统安装即可。&lt;/p&gt;

&lt;h3 id=&quot;intel核显--nvidia独显-的问题&quot;&gt;Intel核显 + NVIDIA独显 的问题&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Linus Torvalds:  NVIDIA, fuck u!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;安装完之后一开始正常使用没什么问题，但是一竖屏后就有撕裂现象。&lt;/p&gt;

&lt;p&gt;解决办法：安装 optimus-manager 和 optimus-manager-qt ，切换为 NVIDIA 之后就没问题了。大黄蜂方案已经过时且不再维护了，不建议使用。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Askannz/optimus-manager&quot;&gt;optimus-manager&lt;/a&gt; ( A Linux program to handle GPU switching on Optimus laptops)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;文档中有关于 &lt;a href=&quot;https://github.com/Askannz/optimus-manager#important--gnome-and-gdm-users&quot;&gt;Gnome and GDM users&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/Askannz/optimus-manager#important--manjaro-kde-users&quot;&gt;IMPORTANT : Manjaro KDE users&lt;/a&gt; 的注意事项，一定要看，否则可能会导致切换后黑屏、无法启动的问题，我在这浪费了好多时间…&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;换源&quot;&gt;换源&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman-mirros -i -c China -m rank &lt;/code&gt; 	 选中一个&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman -Syy&lt;/code&gt;  	更新软件源&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman -Syu&lt;/code&gt; 	 更新全部软件&lt;/p&gt;

&lt;h3 id=&quot;安装搜狗拼音&quot;&gt;安装搜狗拼音&lt;/h3&gt;

&lt;p&gt;添加 archlinuxcn 软件源，/etc/pacman.conf 在最后加入&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-[archlinuxcn]&quot;&gt;SigLevel = Optional TrustAll 
Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman -Syy&lt;/code&gt;  	更新软件源&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman -S archlinux-keyring&lt;/code&gt;	 更新软件密钥&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman -S fcitx-im&lt;/code&gt;	 安装输入法框架&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman -S fcitx-configtool&lt;/code&gt;	 安装输入法配置工具&lt;/p&gt;

&lt;p&gt;在软件中心找到并安装 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fcitx-sogoupinyin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;( 注意：一定要按顺序安装，不能直接安装最后一个，会导致依赖缺失，不能配置等问题)&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;在 /etc/environment 中加入&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx
XMODIFIERS=@im=fcitx
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重启完成&lt;/p&gt;

&lt;h3 id=&quot;安装微信&quot;&gt;安装微信&lt;/h3&gt;

&lt;p&gt;文档写的很详细：&lt;a href=&quot;https://github.com/countstarlight/deepin-wine-wechat-arch&quot;&gt;deepin-wine-wechat-arch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;大多数问题都可以通过 &lt;a href=&quot;https://github.com/countstarlight/deepin-wine-wechat-arch#%E5%88%87%E6%8D%A2%E5%88%B0-deepin-wine&quot;&gt;切换到 deepin-wine&lt;/a&gt; 解决&lt;/p&gt;

&lt;h3 id=&quot;使用-oh-my-zsh&quot;&gt;使用 oh-my-zsh&lt;/h3&gt;

&lt;p&gt;https://gist.github.com/yovko/becf16eecd3a1f69a4e320a95689249e&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/romkatv/powerlevel10k#arch-linux&quot;&gt;主题美化&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;idea-ultimate-输入法候选框不跟随鼠标一直在左下角&quot;&gt;IDEA Ultimate 输入法候选框不跟随鼠标，一直在左下角&lt;/h3&gt;

&lt;p&gt;这是一个 idea 古老又没人管的bug&lt;/p&gt;

&lt;p&gt;解决办法参考：https://ld246.com/article/1601280084643&lt;/p&gt;

&lt;p&gt;下载修改过的  JetBrainsRuntime ，在 idea.sh 启动脚本开头添加&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export IDEA_JDK=xport IDEA_JDK=目录/java-11.0.7-jetbrain&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;但是有个新的问题，markdown文件 的预览按钮不见了，也懒得折腾了，写 markdown 用专门的编辑器吧，比如 Typoar&lt;/p&gt;

&lt;h3 id=&quot;idea-不会显示全局系统菜单&quot;&gt;IDEA 不会显示全局系统菜单&lt;/h3&gt;

&lt;p&gt;Manjaro安装了 Application Title 插件后所有应用的菜单都会在顶部的全局系统菜单显示，但 IDEA 不会。&lt;/p&gt;

&lt;p&gt;官方解决办法： idea中安装 JavaFX Runtime for Plugins 插件。&lt;/p&gt;

&lt;p&gt;但是有点延迟，打开 idea 后要过一会菜单才会出来，也是很烦。&lt;/p&gt;

&lt;h3 id=&quot;美化&quot;&gt;美化&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=exQh0_JKBJQ&quot;&gt;Make Your KDE Plasma Desktop Look Better&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;参考着来，不需要完全照搬&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Apr 2021 00:00:00 +0800</pubDate>
        <link>https://luxinghong.github.io/blog/2021/04/12/manjaro-install/</link>
        <guid isPermaLink="true">https://luxinghong.github.io/blog/2021/04/12/manjaro-install/</guid>
        
        <category>Manjaro</category>
        
        
      </item>
    
  </channel>
</rss>
